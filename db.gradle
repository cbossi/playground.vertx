project.ext {
  jooqGeneratorOutputDir = 'src/main/gen'
  jooqGeneratorOutputPackage = 'ch.cbossi.playground.vertx'
  postgresqlVersion = '42.2.5'
}

dependencies {
  runtimeOnly "org.postgresql:postgresql:$postgresqlVersion"
  implementation "org.jooq:jooq:3.11.11"

  /**
   * Below dependency is required since jOOQ adds the annotation 'javax.annotation.Generated' to the generated code.
   * This will be changed with jOOQ 3.12. See: https://github.com/jOOQ/jOOQ/issues/7565
   */
  implementation "javax.annotation:javax.annotation-api:1.3.2"

  jooqRuntime "org.postgresql:postgresql:$postgresqlVersion"
}

def dbUrl = "jdbc:postgresql://localhost:5432/$dbName"

jooq {
  Db(sourceSets.main) {
    jdbc {
      driver = 'org.postgresql.Driver'
      url = dbUrl
      user = dbUser
      password = dbPassword
      schema = dbSchema
    }

    generator {
      name = 'org.jooq.codegen.DefaultGenerator'
      strategy {
        name = 'org.jooq.codegen.DefaultGeneratorStrategy'
      }
      database {
        name = 'org.jooq.meta.postgres.PostgresDatabase'
        inputSchema = dbSchema
      }
      generate {
        pojos = true
        records = true
        javaTimeTypes = true
        fluentSetters = true
      }
      target {
        directory = jooqGeneratorOutputDir
        packageName = jooqGeneratorOutputPackage
      }
    }
  }
}

sourceSets {
  main {
    java {
      srcDirs += [jooqGeneratorOutputDir]
    }
  }
}

generateDbJooqSchemaSource {
  doFirst {
    project.file(jooqGeneratorOutputDir).deleteDir()
  }
}

clean.doLast {
  project.file(jooqGeneratorOutputDir).deleteDir()
}

compileJava {
  dependsOn generateDbJooqSchemaSource
}
